{"version":3,"file":"static/js/552.ddba9d72.chunk.js","mappings":"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","sources":["components/Dropdown/Dropdown.jsx","components/CarList/CarList.styled.js","redux/selectors.js","components/CarItem/CarItem.styled.js","components/CarItem/CarItem.jsx","components/CarList/CarList.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   setBrandFilter,\n//   setHourlyRateFilter,\n//   setMileageFilter,\n// } from './actions';\n\nconst Dropdown = ({ carBrands, hourlyRates }) => {\n  //   const dispatch = useDispatch();\n  //   const { brandFilter, hourlyRateFilter, minMileageFilter, maxMileageFilter } =\n  //     useSelector(state => state.carFilters);\n\n  //   const handleBrandChange = event => {\n  //     dispatch(setBrandFilter(event.target.value));\n  //   };\n\n  //   const handleHourlyRateChange = event => {\n  //     dispatch(setHourlyRateFilter(event.target.value));\n  //   };\n\n  //   const handleMinMileageChange = event => {\n  //     dispatch(setMileageFilter(event.target.value, maxMileageFilter));\n  //   };\n\n  //   const handleMaxMileageChange = event => {\n  //     dispatch(setMileageFilter(minMileageFilter, event.target.value));\n  //   };\n\n  return (\n    <div>\n      <label htmlFor=\"carBrand\">\n        Car Brand\n        <select\n          id=\"carBrand\"\n          //   value={brandFilter} onChange={handleBrandChange}\n        >\n          <option value=\"\" disabled>\n            Select brand\n          </option>\n          {/* {carBrands.map(brand => (\n          <option key={brand} value={brand}>\n            {brand}\n          </option>\n        ))} */}\n        </select>\n      </label>\n\n      <label htmlFor=\"hourlyRate\">\n        Price / 1 hour\n        <select\n          id=\"hourlyRate\"\n          // value={hourlyRateFilter}\n          // onChange={handleHourlyRateChange}\n        >\n          <option value=\"\" disabled>\n            Select hourly rate\n          </option>\n          {/* {hourlyRates.map(rate => (\n          <option key={rate} value={rate}>\n            ${rate} per hour\n          </option>\n        ))} */}\n        </select>\n      </label>\n      <label htmlFor=\"mileage\">\n        Ð¡ar mileage / km\n        <input\n          type=\"number\"\n          id=\"mileage\"\n          // value={minMileageFilter}\n          // onChange={handleMinMileageChange}\n        />\n        <input\n          type=\"number\"\n          id=\"mileage\"\n          // value={maxMileageFilter}\n          // onChange={handleMaxMileageChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import styled from 'styled-components';\n\nexport const CarListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px 29px;\n  margin: 0 auto;\n`;\n","export const getCars = state => state.cars.adverts;\n\nexport const getIsLoading = state => state.cars.isLoading;\n\nexport const getError = state => state.cars.error;\n\nexport const getTotalCarsInArr = state => state.cars.adverts.length;\n\nexport const getFavorites = state => state.cars.favorites;\n\n// export const getFilter = state => state.filters;\n","import styled from 'styled-components';\n\nexport const CarItemStyled = styled.li`\n  flex-basis: calc((100% - 3 * 29px) / 4);\n  max-width: 274px;\n`;\n\nexport const ImageWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n  border-radius: 14px;\n  margin-bottom: 14px;\n  height: 268px;\n\n  display: flex;\n  flex-direction: column;\n\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    fill: ${props => (props.isFavorite ? '#3470FF' : '#FFFFFF')};\n  }\n`;\n\nexport const TextHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 28px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport {\n  CarItemStyled,\n  ImageWrapper,\n  TextHolder,\n  FavoriteButton,\n} from './CarItem.styled';\n\nimport { getFavorites } from '../../redux/selectors';\nimport {\n  addToFavorites,\n  removeFromFavorites,\n} from '../../redux/cars/favoriteSlice';\n\nimport { FaRegHeart, FaHeart } from 'react-icons/fa6';\n\nexport const CarItem = ({ car }) => {\n  const {\n    address,\n    rentalCompany,\n    id,\n    img,\n    description,\n    functionalities,\n    mileage,\n    model,\n    type,\n    rentalPrice,\n    year,\n    make,\n  } = car;\n\n  const dispatch = useDispatch();\n  const favorites = useSelector(getFavorites);\n  const [isFavorite, setIsFavorite] = useState(false);\n  //   const isFavorite = favorites.some(item => item.id === car.id);\n\n  const addressParts = address.split(', ');\n  const classCar = rentalCompany.split(' ');\n\n  useEffect(() => {\n    if (favorites !== null) {\n      const carIsInFavList = favorites.some(advert => advert.id === id);\n\n      setIsFavorite(carIsInFavList);\n    }\n  }, [favorites, id]);\n\n  const handleToggleFavorite = () => {\n    if (!isFavorite) {\n      dispatch(addToFavorites(car));\n      setIsFavorite(true);\n    } else {\n      dispatch(removeFromFavorites(id));\n      setIsFavorite(false);\n    }\n  };\n\n  return (\n    <CarItemStyled>\n      <ImageWrapper>\n        <img\n          src={\n            img\n              ? img\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWggGWNvpgV9vuCU59n0yoAuZtQTxKGSXH2w&usqp=CAU'\n          }\n          alt={description}\n          loading=\"lazy\"\n        />\n        <FavoriteButton\n          type=\"button\"\n          onClick={handleToggleFavorite}\n          className=\"cursor-pointer\"\n          $isFavorite={isFavorite}\n        >\n          {isFavorite ? <FaHeart /> : <FaRegHeart />}\n        </FavoriteButton>\n      </ImageWrapper>\n      <TextHolder>\n        <div>\n          <p>\n            <span>{make}</span>\n            <span>{model}</span>\n            <span> {year}</span>\n          </p>\n          <p>{rentalPrice}</p>\n        </div>\n\n        <div>\n          <ul>\n            <li>{addressParts[1]}</li>\n            <li>{addressParts[2]}</li>\n            <li>{rentalCompany}</li>\n            <li>{classCar[0]}</li>\n            <li>{type}</li>\n            <li>{model}</li>\n            <li>{mileage}</li>\n            <li>{functionalities[0]}</li>\n          </ul>\n        </div>\n      </TextHolder>\n\n      <button\n      //   onClick={handleModalOpen}\n      >\n        Learn more\n      </button>\n      {/* <Modal\n        isOpenModalProp={isOpenModal}\n        handleModalCloseProp={handleModalClose}\n        carDataProp={carData}\n      /> */}\n    </CarItemStyled>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { CarListStyled } from './CarList.styled';\n\nimport {\n  getCars,\n  getIsLoading,\n  getError,\n  getTotalCarsInArr,\n} from '../../redux/selectors';\n\nimport { fetchAllCars } from '../../utils/getApi';\nimport { useSearchParams } from 'react-router-dom';\nimport { CarItem } from '../CarItem/CarItem';\n\nexport const CarList = () => {\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(Number(searchParams.get('page')) || 1);\n  const adverts = useSelector(getCars);\n  const totalCarsInArray = useSelector(getTotalCarsInArr);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    if (!initialized.current || page !== 1) {\n      dispatch(fetchAllCars(page));\n      initialized.current = true;\n    }\n  }, [dispatch, page, setSearchParams]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n    setSearchParams({ page: page + 1 });\n  };\n\n  return (\n    <>\n      <CarListStyled>\n        {adverts.map(advert => {\n          return <CarItem car={advert} key={advert.id} />;\n        })}\n      </CarListStyled>\n\n      {totalCarsInArray > 0 &&\n        totalCarsInArray < 32 &&\n        !error &&\n        !isLoading && <button onClick={handleLoadMore}>Load more</button>}\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport Loader from '../../components/Loader/Loader';\nimport { CarList } from '../../components/CarList/CarList';\nimport { Error } from '../../components/GlobalStyle';\n\nimport { getIsLoading, getError } from '../../redux/selectors';\n\nconst CatalogPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {error && (\n        <Error>\n          Sorry. Something went wrong. Please reload the page to try again.\n        </Error>\n      )}\n      <Dropdown />\n      <CarList />\n    </main>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["_ref","carBrands","hourlyRates","_jsxs","children","htmlFor","_jsx","id","value","disabled","type","CarListStyled","styled","ul","_templateObject","_taggedTemplateLiteral","getCars","state","cars","adverts","getIsLoading","isLoading","getError","error","getTotalCarsInArr","length","getFavorites","favorites","CarItemStyled","li","ImageWrapper","div","_templateObject2","FavoriteButton","button","_templateObject3","props","isFavorite","TextHolder","_templateObject4","CarItem","car","address","rentalCompany","img","description","functionalities","mileage","model","rentalPrice","year","make","dispatch","useDispatch","useSelector","setIsFavorite","useState","addressParts","split","classCar","useEffect","carIsInFavList","some","advert","src","alt","loading","onClick","handleToggleFavorite","removeFromFavorites","addToFavorites","className","$isFavorite","FaHeart","FaRegHeart","CarList","searchParams","setSearchParams","useSearchParams","page","setPage","Number","get","totalCarsInArray","initialized","useRef","current","fetchAllCars","_Fragment","map","handleLoadMore","prevPage","CatalogPage","Loader","Error","Dropdown"],"sourceRoot":""}