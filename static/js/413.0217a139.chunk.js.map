{"version":3,"file":"static/js/413.0217a139.chunk.js","mappings":"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","sources":["components/CarList/CarList.styled.js","components/CarItem/CarItem.styled.js","components/CarItem/CarItem.jsx","utils/formatNumber.js","components/CarList/CarList.jsx","components/Dropdown/Dropdown.jsx","pages/FavoritesPage/FavoritesPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CarListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px 29px;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\n\nexport const CarItemStyled = styled.li`\n  flex-basis: calc((100% - 3 * 29px) / 4);\n  max-width: 274px;\n`;\n\nexport const ImageWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n  border-radius: 14px;\n  margin-bottom: 14px;\n  height: 268px;\n\n  display: flex;\n  flex-direction: column;\n\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    fill: ${props => (props.isFavorite ? '#3470FF' : '#FFFFFF')};\n  }\n`;\n\nexport const TextHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 28px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport {\n  CarItemStyled,\n  ImageWrapper,\n  TextHolder,\n  FavoriteButton,\n} from './CarItem.styled';\n\nimport { getFavorites } from '../../redux/selectors';\nimport {\n  addToFavorites,\n  removeFromFavorites,\n} from '../../redux/cars/carsSlice';\n\nimport { FaRegHeart, FaHeart } from 'react-icons/fa6';\nimport { formatNumber } from '../../utils/formatNumber';\n\nexport const CarItem = ({ car }) => {\n  const {\n    make,\n    year,\n    model,\n    type,\n    img,\n    functionalities,\n    rentalCompany,\n    address,\n    rentalPrice,\n    mileage,\n    id,\n    description,\n  } = car;\n\n  const dispatch = useDispatch();\n  const favorites = useSelector(getFavorites);\n\n  console.log(favorites);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const addressParts = address?.split(', ');\n  const classCar = rentalCompany?.split(' ');\n  const uiMileage = formatNumber(mileage);\n\n  useEffect(() => {\n    if (favorites !== null) {\n      const carIsInFavList = favorites.some(advert => advert.id === id);\n\n      setIsFavorite(carIsInFavList);\n    }\n  }, [favorites, id]);\n\n  const handleToggleFavorite = () => {\n    if (!isFavorite) {\n      dispatch(addToFavorites(car));\n      setIsFavorite(true);\n    } else {\n      dispatch(removeFromFavorites(id));\n      setIsFavorite(false);\n    }\n  };\n\n  return (\n    <CarItemStyled>\n      <ImageWrapper>\n        <img\n          src={\n            img\n              ? img\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWggGWNvpgV9vuCU59n0yoAuZtQTxKGSXH2w&usqp=CAU'\n          }\n          alt={description}\n          loading=\"lazy\"\n        />\n        <FavoriteButton\n          type=\"button\"\n          onClick={handleToggleFavorite}\n          className=\"cursor-pointer\"\n          $isFavorite={isFavorite}\n        >\n          {isFavorite ? <FaHeart /> : <FaRegHeart />}\n        </FavoriteButton>\n      </ImageWrapper>\n      <TextHolder>\n        <div>\n          <p>\n            <span>{make}</span>\n            <span>{model}</span>\n            <span> {year}</span>\n          </p>\n          <p>{rentalPrice}</p>\n        </div>\n\n        <div>\n          <ul>\n            <li>{addressParts[1]}</li>\n            <li>{addressParts[2]}</li>\n            <li>{rentalCompany}</li>\n            <li>{classCar[0]}</li>\n            <li>{type}</li>\n            <li>{model}</li>\n            <li>{uiMileage}</li>\n            <li>{functionalities[0]}</li>\n          </ul>\n        </div>\n      </TextHolder>\n\n      <button\n      //   onClick={handleModalOpen}\n      >\n        Learn more\n      </button>\n      {/* <Modal\n        isOpenModalProp={isOpenModal}\n        handleModalCloseProp={handleModalClose}\n        carDataProp={carData}\n      /> */}\n    </CarItemStyled>\n  );\n};\n","export const formatNumber = number => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { CarListStyled } from './CarList.styled';\n\nimport {\n  // getCars,\n  getIsLoading,\n  getError,\n  getTotalCarsInArr,\n} from '../../redux/selectors';\n\nimport { fetchAllCars } from '../../utils/getApi';\nimport { CarItem } from '../CarItem/CarItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const CarList = ({ adverts }) => {\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const [page, setPage] = useState(Number(searchParams.get('page')) || 1);\n  // const adverts = useSelector(getCars);\n  const totalCarsInArray = useSelector(getTotalCarsInArr);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    if (!initialized.current || page !== 1) {\n      dispatch(fetchAllCars(page));\n      initialized.current = true;\n    }\n  }, [dispatch, page, initialized]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <CarListStyled>\n        {adverts.map(advert => {\n          const { id } = advert;\n          return <CarItem car={advert} key={id ? id : nanoid()} />;\n        })}\n      </CarListStyled>\n\n      {totalCarsInArray > 0 &&\n        totalCarsInArray < 32 &&\n        !error &&\n        !isLoading && <button onClick={handleLoadMore}>Load more</button>}\n    </>\n  );\n};\n","// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   setBrandFilter,\n//   setHourlyRateFilter,\n//   setMileageFilter,\n// } from './actions';\n\nconst Dropdown = ({ carBrands, hourlyRates }) => {\n  //   const dispatch = useDispatch();\n  //   const { brandFilter, hourlyRateFilter, minMileageFilter, maxMileageFilter } =\n  //     useSelector(state => state.carFilters);\n\n  //   const handleBrandChange = event => {\n  //     dispatch(setBrandFilter(event.target.value));\n  //   };\n\n  //   const handleHourlyRateChange = event => {\n  //     dispatch(setHourlyRateFilter(event.target.value));\n  //   };\n\n  //   const handleMinMileageChange = event => {\n  //     dispatch(setMileageFilter(event.target.value, maxMileageFilter));\n  //   };\n\n  //   const handleMaxMileageChange = event => {\n  //     dispatch(setMileageFilter(minMileageFilter, event.target.value));\n  //   };\n\n  return (\n    <div>\n      <label htmlFor=\"carBrand\">\n        Car Brand\n        <select\n          id=\"carBrand\"\n          //   value={brandFilter} onChange={handleBrandChange}\n        >\n          <option value=\"\" disabled>\n            Select brand\n          </option>\n          {/* {carBrands.map(brand => (\n          <option key={brand} value={brand}>\n            {brand}\n          </option>\n        ))} */}\n        </select>\n      </label>\n\n      <label htmlFor=\"hourlyRate\">\n        Price / 1 hour\n        <select\n          id=\"hourlyRate\"\n          // value={hourlyRateFilter}\n          // onChange={handleHourlyRateChange}\n        >\n          <option value=\"\" disabled>\n            Select hourly rate\n          </option>\n          {/* {hourlyRates.map(rate => (\n          <option key={rate} value={rate}>\n            ${rate} per hour\n          </option>\n        ))} */}\n        </select>\n      </label>\n      <label htmlFor=\"mileage\">\n        Сar mileage / km\n        <input\n          type=\"number\"\n          id=\"mileage\"\n          // value={minMileageFilter}\n          // onChange={handleMinMileageChange}\n        />\n        <input\n          type=\"number\"\n          id=\"mileage\"\n          // value={maxMileageFilter}\n          // onChange={handleMaxMileageChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useSelector } from 'react-redux';\n\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport Loader from '../../components/Loader/Loader';\nimport { CarList } from '../../components/CarList/CarList';\nimport { Error } from '../../components/GlobalStyle';\nimport { getIsLoading, getError, getFavorites } from '../../redux/selectors';\n\nconst FavoritesPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const favorites = useSelector(getFavorites);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {error && (\n        <Error>\n          Sorry. Something went wrong. Please reload the page to try again.\n        </Error>\n      )}\n      {!favorites && (\n        <div>\n          It appears that you haven't added any adverts to your favorites yet.\n          To get started, you can add adverts that you like to your favorites\n          for easier access in the future. Lorem ipsum dolor sit amet\n          consectetur, adipisicing elit. Molestiae officia deleniti tempore\n          libero illo architecto nihil ab earum ut eligendi commodi eum corporis\n          voluptates doloribus labore cum vero culpa laborum, dolore, enim sed.\n          Iure, nemo at blanditiis assumenda ad rem eum qui delectus doloribus,\n          suscipit ipsum consequuntur dolorum quaerat porro, est veniam animi\n          quam rerum beatae minima nobis ullam. Tempora consequuntur nihil quam!\n          Aspernatur maxime facilis, dolorem aperiam sequi nihil tenetur\n          similique veritatis dolore quidem odit, voluptatem iure adipisci\n          delectus ab vero excepturi, quia magni nobis id a possimus fugit saepe\n          laudantium. Porro consequuntur exercitationem similique ea praesentium\n          hic omnis.\n        </div>\n      )}\n      <Dropdown />\n      <CarList adverts={favorites} />\n    </main>\n  );\n};\n\nexport default FavoritesPage;\n","export const getCars = state => state.cars.adverts;\n\nexport const getIsLoading = state => state.cars.isLoading;\n\nexport const getError = state => state.cars.error;\n\nexport const getTotalCarsInArr = state => state.cars.adverts.length;\n\nexport const getFavorites = state => state.cars.favorites;\n\n// export const getFilter = state => state.filters;\n"],"names":["CarListStyled","styled","ul","_templateObject","_taggedTemplateLiteral","CarItemStyled","li","ImageWrapper","div","_templateObject2","FavoriteButton","button","_templateObject3","props","isFavorite","TextHolder","_templateObject4","CarItem","_ref","car","make","year","model","type","img","functionalities","rentalCompany","address","rentalPrice","mileage","id","description","dispatch","useDispatch","favorites","useSelector","getFavorites","console","log","setIsFavorite","useState","addressParts","split","classCar","uiMileage","toString","replace","useEffect","carIsInFavList","some","advert","_jsxs","children","_jsx","src","alt","loading","onClick","handleToggleFavorite","removeFromFavorites","addToFavorites","className","$isFavorite","FaHeart","FaRegHeart","CarList","adverts","searchParams","useSearchParams","page","setPage","Number","get","totalCarsInArray","getTotalCarsInArr","error","getError","isLoading","getIsLoading","initialized","useRef","current","fetchAllCars","_Fragment","map","nanoid","handleLoadMore","prevPage","carBrands","hourlyRates","htmlFor","value","disabled","FavoritesPage","Loader","Error","Dropdown","getCars","state","cars","length"],"sourceRoot":""}