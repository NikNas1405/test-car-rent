{"version":3,"file":"static/js/270.380fa1a8.chunk.js","mappings":"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","sources":["components/CarList/CarList.styled.js","components/CarItem/CarItem.styled.js","components/CarItem/CarItem.jsx","components/CarList/CarList.jsx","components/Dropdown/Dropdown.jsx","pages/CatalogPage/CatalogPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CarListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px 29px;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\n\nexport const CarItemStyled = styled.li`\n  flex-basis: calc((100% - 3 * 29px) / 4);\n  max-width: 274px;\n`;\n\nexport const ImageWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n  border-radius: 14px;\n  margin-bottom: 14px;\n  height: 268px;\n\n  display: flex;\n  flex-direction: column;\n\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const FavoriteButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  > svg {\n    width: 18px;\n    height: 18px;\n    fill: ${props => (props.isFavorite ? '#3470FF' : '#FFFFFF')};\n  }\n`;\n\nexport const TextHolder = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 28px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport {\n  CarItemStyled,\n  ImageWrapper,\n  TextHolder,\n  FavoriteButton,\n} from './CarItem.styled';\n\nimport { getFavorites } from '../../redux/selectors';\nimport {\n  addToFavorites,\n  removeFromFavorites,\n} from '../../redux/cars/carsSlice';\n\nimport { FaRegHeart, FaHeart } from 'react-icons/fa6';\n\nexport const CarItem = ({ car }) => {\n  const {\n    make,\n    year,\n    model,\n    type,\n    img,\n    functionalities,\n    rentalCompany,\n    address,\n    rentalPrice,\n    mileage,\n    id,\n    description,\n  } = car;\n\n  const dispatch = useDispatch();\n  const favorites = useSelector(getFavorites);\n\n  console.log(favorites);\n  const [isFavorite, setIsFavorite] = useState(false);\n  //   const isFavorite = favorites.some(item => item.id === car.id);\n\n  const addressParts = address?.split(', ');\n  const classCar = rentalCompany?.split(' ');\n\n  useEffect(() => {\n    if (favorites !== null) {\n      const carIsInFavList = favorites.some(advert => advert.id === id);\n\n      setIsFavorite(carIsInFavList);\n    }\n  }, [favorites, id]);\n\n  const handleToggleFavorite = () => {\n    if (!isFavorite) {\n      dispatch(addToFavorites(car));\n      setIsFavorite(true);\n    } else {\n      dispatch(removeFromFavorites(id));\n      setIsFavorite(false);\n    }\n  };\n\n  return (\n    <CarItemStyled>\n      <ImageWrapper>\n        <img\n          src={\n            img\n              ? img\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWggGWNvpgV9vuCU59n0yoAuZtQTxKGSXH2w&usqp=CAU'\n          }\n          alt={description}\n          loading=\"lazy\"\n        />\n        <FavoriteButton\n          type=\"button\"\n          onClick={handleToggleFavorite}\n          className=\"cursor-pointer\"\n          $isFavorite={isFavorite}\n        >\n          {isFavorite ? <FaHeart /> : <FaRegHeart />}\n        </FavoriteButton>\n      </ImageWrapper>\n      <TextHolder>\n        <div>\n          <p>\n            <span>{make}</span>\n            <span>{model}</span>\n            <span> {year}</span>\n          </p>\n          <p>{rentalPrice}</p>\n        </div>\n\n        <div>\n          <ul>\n            <li>{addressParts[1]}</li>\n            <li>{addressParts[2]}</li>\n            <li>{rentalCompany}</li>\n            <li>{classCar[0]}</li>\n            <li>{type}</li>\n            <li>{model}</li>\n            <li>{mileage}</li>\n            <li>{functionalities[0]}</li>\n          </ul>\n        </div>\n      </TextHolder>\n\n      <button\n      //   onClick={handleModalOpen}\n      >\n        Learn more\n      </button>\n      {/* <Modal\n        isOpenModalProp={isOpenModal}\n        handleModalCloseProp={handleModalClose}\n        carDataProp={carData}\n      /> */}\n    </CarItemStyled>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { CarListStyled } from './CarList.styled';\n\nimport {\n  // getCars,\n  getIsLoading,\n  getError,\n  getTotalCarsInArr,\n} from '../../redux/selectors';\n\nimport { fetchAllCars } from '../../utils/getApi';\nimport { CarItem } from '../CarItem/CarItem';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport const CarList = ({ adverts }) => {\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const [page, setPage] = useState(Number(searchParams.get('page')) || 1);\n  // const adverts = useSelector(getCars);\n  const totalCarsInArray = useSelector(getTotalCarsInArr);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    if (!initialized.current || page !== 1) {\n      dispatch(fetchAllCars(page));\n      initialized.current = true;\n    }\n  }, [dispatch, page, initialized]);\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <>\n      <CarListStyled>\n        {adverts.map(advert => {\n          const { id } = advert;\n          return <CarItem car={advert} key={id ? id : nanoid()} />;\n        })}\n      </CarListStyled>\n\n      {totalCarsInArray > 0 &&\n        totalCarsInArray < 32 &&\n        !error &&\n        !isLoading && <button onClick={handleLoadMore}>Load more</button>}\n    </>\n  );\n};\n","// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import {\n//   setBrandFilter,\n//   setHourlyRateFilter,\n//   setMileageFilter,\n// } from './actions';\n\nconst Dropdown = ({ carBrands, hourlyRates }) => {\n  //   const dispatch = useDispatch();\n  //   const { brandFilter, hourlyRateFilter, minMileageFilter, maxMileageFilter } =\n  //     useSelector(state => state.carFilters);\n\n  //   const handleBrandChange = event => {\n  //     dispatch(setBrandFilter(event.target.value));\n  //   };\n\n  //   const handleHourlyRateChange = event => {\n  //     dispatch(setHourlyRateFilter(event.target.value));\n  //   };\n\n  //   const handleMinMileageChange = event => {\n  //     dispatch(setMileageFilter(event.target.value, maxMileageFilter));\n  //   };\n\n  //   const handleMaxMileageChange = event => {\n  //     dispatch(setMileageFilter(minMileageFilter, event.target.value));\n  //   };\n\n  return (\n    <div>\n      <label htmlFor=\"carBrand\">\n        Car Brand\n        <select\n          id=\"carBrand\"\n          //   value={brandFilter} onChange={handleBrandChange}\n        >\n          <option value=\"\" disabled>\n            Select brand\n          </option>\n          {/* {carBrands.map(brand => (\n          <option key={brand} value={brand}>\n            {brand}\n          </option>\n        ))} */}\n        </select>\n      </label>\n\n      <label htmlFor=\"hourlyRate\">\n        Price / 1 hour\n        <select\n          id=\"hourlyRate\"\n          // value={hourlyRateFilter}\n          // onChange={handleHourlyRateChange}\n        >\n          <option value=\"\" disabled>\n            Select hourly rate\n          </option>\n          {/* {hourlyRates.map(rate => (\n          <option key={rate} value={rate}>\n            ${rate} per hour\n          </option>\n        ))} */}\n        </select>\n      </label>\n      <label htmlFor=\"mileage\">\n        Сar mileage / km\n        <input\n          type=\"number\"\n          id=\"mileage\"\n          // value={minMileageFilter}\n          // onChange={handleMinMileageChange}\n        />\n        <input\n          type=\"number\"\n          id=\"mileage\"\n          // value={maxMileageFilter}\n          // onChange={handleMaxMileageChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useSelector } from 'react-redux';\n\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport Loader from '../../components/Loader/Loader';\nimport { CarList } from '../../components/CarList/CarList';\nimport { Error } from '../../components/GlobalStyle';\n\nimport { getIsLoading, getError, getCars } from '../../redux/selectors';\n\nconst CatalogPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const adverts = useSelector(getCars);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {error && (\n        <Error>\n          Sorry. Something went wrong. Please reload the page to try again.\n        </Error>\n      )}\n      <Dropdown />\n      <CarList adverts={adverts} />\n    </main>\n  );\n};\n\nexport default CatalogPage;\n","export const getCars = state => state.cars.adverts;\n\nexport const getIsLoading = state => state.cars.isLoading;\n\nexport const getError = state => state.cars.error;\n\nexport const getTotalCarsInArr = state => state.cars.adverts.length;\n\nexport const getFavorites = state => state.cars.favorites;\n\n// export const getFilter = state => state.filters;\n"],"names":["CarListStyled","styled","ul","_templateObject","_taggedTemplateLiteral","CarItemStyled","li","ImageWrapper","div","_templateObject2","FavoriteButton","button","_templateObject3","props","isFavorite","TextHolder","_templateObject4","CarItem","_ref","car","make","year","model","type","img","functionalities","rentalCompany","address","rentalPrice","mileage","id","description","dispatch","useDispatch","favorites","useSelector","getFavorites","console","log","setIsFavorite","useState","addressParts","split","classCar","useEffect","carIsInFavList","some","advert","_jsxs","children","_jsx","src","alt","loading","onClick","handleToggleFavorite","removeFromFavorites","addToFavorites","className","$isFavorite","FaHeart","FaRegHeart","CarList","adverts","searchParams","useSearchParams","page","setPage","Number","get","totalCarsInArray","getTotalCarsInArr","error","getError","isLoading","getIsLoading","initialized","useRef","current","fetchAllCars","_Fragment","map","nanoid","handleLoadMore","prevPage","carBrands","hourlyRates","htmlFor","value","disabled","CatalogPage","getCars","Loader","Error","Dropdown","state","cars","length"],"sourceRoot":""}